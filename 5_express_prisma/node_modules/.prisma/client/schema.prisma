// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  // @id sirve para indicar que pk
  //@default > indica cual sera su valor
  //@db > sirve para indicar el tipo en la base datos
  //? puede aceptar valores nukos
  //@map > sirve para indicar como se llma esa propiedad en la base datos
  id       Int      @id @default(autoincrement())
  email    String   @unique @db.Text
  nombre   String?
  nickName String   @map("nick_name")
  //columanas de auditoria
  createAt DateTime @default(now()) @map("created_at")
  updateAt DateTime @updatedAt() @map("updated_at")
  password String?

  notas Nota[] //[] > sirver para indicar que un registro podra contenet varios registro con otra table

  //@@ para el monbre de tabla 
  @@map("usuarios")
}

model Nota {
  id          Int        @id @default(autoincrement())
  titulo      String
  descripcion String?
  estado      EstadoNote @default(POR_HACER)
  deletedAt   DateTime?  @map("deleted_at")
  //relaciones
  usuarioId   Int        @map("usuario_id")
  usuario     Usuario    @relation(fields: [usuarioId], references: [id])

  @@map("notas")
}

enum EstadoNote {
  POR_HACER
  HACIENDO
  REALIZADO
}
